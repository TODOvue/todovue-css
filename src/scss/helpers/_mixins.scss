@import "variables";

@mixin backgroundColorAndTextColor($background-color, $text-color) {
  background-color: $background-color;
  color: $text-color;
}

@mixin fontFamilyAndFontSize($font-family, $font-size) {
  font-family: $font-family;
  font-size: $font-size;
}

@mixin defaultButton() {
  @include backgroundColorAndTextColor($color-background-button-light, $color-text-button-light);
  @include size(width, 100px, min);
  @include size(width, auto);
  border: none;
  padding: 0.8rem 1.2rem;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  display: inline-block;
  font-size: 14px;
  box-shadow: 0 0 5px $color-background-button-dark;
}

@mixin buttonSize($min-width, $width, $padding, $font-size) {
  @include size(width, $min-width, min);
  @include size(width, $width);
  font-size: $font-size;
  padding: $padding;
  white-space: nowrap;
}

@mixin defaultIcon($icon) {
  background-image: url($icon);
}

@mixin defaultIconSize($size) {
  @include size(width, $size);
  @include size(height, $size);
}

@mixin buttonText($background, $color) {
  @include backgroundColorAndTextColor($background, $color);
  border: none;
  box-shadow: none;
}

@mixin backgroundColorAndBoxShadow($background-color, $box-shadow) {
  background-color: $background-color;
  box-shadow: $box-shadow;
}

@mixin typeButton($background-color, $color-text-button-light, $color-background) {
  @include backgroundColorAndTextColor($background-color, $color-text-button-light);
  box-shadow: 0 0 5px $background-color;

  &:hover {
    background-color: darken($background-color, 10%);
  }

  &:active {
    background-color: darken($background-color, 15%);
  }

  &.tv-btn-outlined {
    @include backgroundColorAndTextColor(transparent, $background-color);
    border: 2px solid $background-color;

    &:hover {
      @include backgroundColorAndTextColor($background-color, $color-text-button-light);
    }

    &.tv-btn-disabled {
      &:hover {
        @include backgroundColorAndTextColor(transparent, $background-color);
      }
    }
  }

  &.tv-btn-text {
    @include buttonText(transparent, $background-color);
  }
}

@mixin floatIcon($direction, $margin, $number) {
  float: $direction;
  margin-#{$margin}: $number;
}

@mixin position($position) {
  position: $position;
}

@mixin borderRadius($border-radius) {
  border-radius: $border-radius;
}

@mixin size($dimension, $size, $minmax: none) {
  @if $dimension == width {
    @if $minmax == min {
      min-width: $size;
    } @else if $minmax == max {
      max-width: $size;
    } @else {
      width: $size;
    }
  } @else if $dimension == height {
    @if $minmax == min {
      min-height: $size;
    } @else if $minmax == max {
      max-height: $size;
    } @else {
      height: $size;
    }
  } @else {
    @error "Invalid dimension specified. Please use 'width' or 'height'.";
  }
}
